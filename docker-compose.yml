version: "3.9"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: user-service-app
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      goose:
        condition: service_completed_successfully

  goose:
    image: golang:1.24-alpine
    container_name: goose-migrations
    working_dir: /migrations
    volumes:
      - ./db/migrations:/migrations
    environment:
      - GOOSE_DRIVER=postgres
      - GOOSE_DBSTRING=host=postgres port=5432 user=admin password=admin dbname=user-db sslmode=disable
    depends_on:
      postgres:
        condition: service_healthy
    command: sh -c "go install github.com/pressly/goose/v3/cmd/goose@latest && goose up"

  postgres:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: user-db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgres/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin" ]
      interval: 5s
      timeout: 5s
      retries: 10

  mongodb:
    image: mongo:7
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db

volumes:
  pgdata:
    driver: local
  mongo-data:
    driver: local